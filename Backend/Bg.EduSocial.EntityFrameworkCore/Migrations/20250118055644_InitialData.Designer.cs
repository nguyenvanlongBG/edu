// <auto-generated />
using System;
using Bg.EduSocial.EntityFrameworkCore.EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bg.EduSocial.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(EduSocialDbContext))]
    [Migration("20250118055644_InitialData")]
    partial class InitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Bg.EduSocial.Domain.AnswerEntity", b =>
                {
                    b.Property<Guid>("answer_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("exam_id")
                        .HasColumnType("char(36)");

                    b.Property<string>("modified_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("modified_date")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("point")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("question_id")
                        .HasColumnType("char(36)");

                    b.HasKey("answer_id");

                    b.ToTable("answer");
                });

            modelBuilder.Entity("Bg.EduSocial.Domain.ChapterEntity", b =>
                {
                    b.Property<Guid>("chapter_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("modified_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("modified_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("subject_id")
                        .HasColumnType("char(36)");

                    b.HasKey("chapter_id");

                    b.ToTable("chapter");

                    b.HasData(
                        new
                        {
                            chapterid = new Guid("62854655-647b-4e13-97cb-d419f9b1e0e6"),
                            createdby = "",
                            createddate = new DateTime(2025, 1, 18, 12, 56, 44, 685, DateTimeKind.Local).AddTicks(2844),
                            modifiedby = "",
                            modifieddate = new DateTime(2025, 1, 18, 12, 56, 44, 685, DateTimeKind.Local).AddTicks(2845),
                            name = "Hàm số lượng giác và phương trình lượng giác",
                            subjectid = new Guid("bca0a3a0-4b29-4a94-9b14-5d40b2a0c7c2")
                        },
                        new
                        {
                            chapterid = new Guid("631929e6-cf27-460e-8c2f-a0eab1f66cd5"),
                            createdby = "",
                            createddate = new DateTime(2025, 1, 18, 12, 56, 44, 685, DateTimeKind.Local).AddTicks(2870),
                            modifiedby = "",
                            modifieddate = new DateTime(2025, 1, 18, 12, 56, 44, 685, DateTimeKind.Local).AddTicks(2871),
                            name = "Dãy số cấp số cộng và cấp số nhân",
                            subjectid = new Guid("bca0a3a0-4b29-4a94-9b14-5d40b2a0c7c2")
                        },
                        new
                        {
                            chapterid = new Guid("08cb38ea-5786-4963-a7d0-fa35a42ad5da"),
                            createdby = "",
                            createddate = new DateTime(2025, 1, 18, 12, 56, 44, 685, DateTimeKind.Local).AddTicks(2874),
                            modifiedby = "",
                            modifieddate = new DateTime(2025, 1, 18, 12, 56, 44, 685, DateTimeKind.Local).AddTicks(2875),
                            name = "Các số đặc trưng đo xu thế trung tâm của mẫu số liệu ghép nhóm",
                            subjectid = new Guid("bca0a3a0-4b29-4a94-9b14-5d40b2a0c7c2")
                        },
                        new
                        {
                            chapterid = new Guid("0b8ab62d-ee23-415c-9eea-a4497c93529b"),
                            createdby = "",
                            createddate = new DateTime(2025, 1, 18, 12, 56, 44, 685, DateTimeKind.Local).AddTicks(2877),
                            modifiedby = "",
                            modifieddate = new DateTime(2025, 1, 18, 12, 56, 44, 685, DateTimeKind.Local).AddTicks(2877),
                            name = "Giới hạn. Hàm số liên tục",
                            subjectid = new Guid("bca0a3a0-4b29-4a94-9b14-5d40b2a0c7c2")
                        },
                        new
                        {
                            chapterid = new Guid("196214b4-d7df-49f5-8b09-87ec82576c59"),
                            createdby = "",
                            createddate = new DateTime(2025, 1, 18, 12, 56, 44, 685, DateTimeKind.Local).AddTicks(2880),
                            modifiedby = "",
                            modifieddate = new DateTime(2025, 1, 18, 12, 56, 44, 685, DateTimeKind.Local).AddTicks(2881),
                            name = "Hàm số mũ và hàm số Logarit",
                            subjectid = new Guid("bca0a3a0-4b29-4a94-9b14-5d40b2a0c7c2")
                        },
                        new
                        {
                            chapterid = new Guid("f7aac895-7913-40b8-82a5-22c30c7fdf57"),
                            createdby = "",
                            createddate = new DateTime(2025, 1, 18, 12, 56, 44, 685, DateTimeKind.Local).AddTicks(2891),
                            modifiedby = "",
                            modifieddate = new DateTime(2025, 1, 18, 12, 56, 44, 685, DateTimeKind.Local).AddTicks(2891),
                            name = "Quan hệ vuông góc trong không gian",
                            subjectid = new Guid("bca0a3a0-4b29-4a94-9b14-5d40b2a0c7c2")
                        },
                        new
                        {
                            chapterid = new Guid("44cc456c-116f-4381-84e3-3a04177f5ea1"),
                            createdby = "",
                            createddate = new DateTime(2025, 1, 18, 12, 56, 44, 685, DateTimeKind.Local).AddTicks(2906),
                            modifiedby = "",
                            modifieddate = new DateTime(2025, 1, 18, 12, 56, 44, 685, DateTimeKind.Local).AddTicks(2906),
                            name = "Các quy tắc tính xác suất",
                            subjectid = new Guid("bca0a3a0-4b29-4a94-9b14-5d40b2a0c7c2")
                        },
                        new
                        {
                            chapterid = new Guid("f28b0c31-190c-4ecf-9f29-3e5e994d8a2d"),
                            createdby = "",
                            createddate = new DateTime(2025, 1, 18, 12, 56, 44, 685, DateTimeKind.Local).AddTicks(2909),
                            modifiedby = "",
                            modifieddate = new DateTime(2025, 1, 18, 12, 56, 44, 685, DateTimeKind.Local).AddTicks(2909),
                            name = "Đạo hàm",
                            subjectid = new Guid("bca0a3a0-4b29-4a94-9b14-5d40b2a0c7c2")
                        });
                });

            modelBuilder.Entity("Bg.EduSocial.Domain.ClassroomEntity", b =>
                {
                    b.Property<Guid>("classroom_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("avatar")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("classroom_code")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("modified_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("modified_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("user_id")
                        .HasColumnType("char(36)");

                    b.HasKey("classroom_id");

                    b.HasIndex("classroom_code")
                        .IsUnique();

                    b.ToTable("classroom");
                });

            modelBuilder.Entity("Bg.EduSocial.Domain.EnrollmentClassEntity", b =>
                {
                    b.Property<Guid>("enrollment_class_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("classroom_id")
                        .HasColumnType("char(36)");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("modified_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("modified_date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<Guid>("user_id")
                        .HasColumnType("char(36)");

                    b.HasKey("enrollment_class_id");

                    b.ToTable("enrollment_class");
                });

            modelBuilder.Entity("Bg.EduSocial.Domain.ExamEntity", b =>
                {
                    b.Property<Guid>("exam_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("modified_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("modified_date")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("point")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("question_ids_attention")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<Guid>("test_id")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("user_id")
                        .HasColumnType("char(36)");

                    b.HasKey("exam_id");

                    b.ToTable("exam");
                });

            modelBuilder.Entity("Bg.EduSocial.Domain.ExamNoteEntity", b =>
                {
                    b.Property<Guid>("exam_note_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("exam_id")
                        .HasColumnType("char(36)");

                    b.Property<string>("modified_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("modified_date")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("question_id")
                        .HasColumnType("char(36)");

                    b.HasKey("exam_note_id");

                    b.ToTable("exam_note");
                });

            modelBuilder.Entity("Bg.EduSocial.Domain.OptionEntity", b =>
                {
                    b.Property<Guid>("option_question_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("modified_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("modified_date")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("question_id")
                        .HasColumnType("char(36)");

                    b.HasKey("option_question_id");

                    b.ToTable("option");
                });

            modelBuilder.Entity("Bg.EduSocial.Domain.Posts.PostEntity", b =>
                {
                    b.Property<Guid>("post_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("group_id")
                        .HasColumnType("char(36)");

                    b.Property<string>("modified_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("modified_date")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("user_id")
                        .HasColumnType("char(36)");

                    b.HasKey("post_id");

                    b.ToTable("post");
                });

            modelBuilder.Entity("Bg.EduSocial.Domain.QuestionChapterEntity", b =>
                {
                    b.Property<Guid>("question_chapter_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("chapter_id")
                        .HasColumnType("char(36)");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("modified_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("modified_date")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("question_id")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("subject_id")
                        .HasColumnType("char(36)");

                    b.HasKey("question_chapter_id");

                    b.ToTable("question_chapter");
                });

            modelBuilder.Entity("Bg.EduSocial.Domain.QuestionEntity", b =>
                {
                    b.Property<Guid>("question_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("chapter_ids")
                        .HasColumnType("longtext");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("from")
                        .HasColumnType("int");

                    b.Property<int?>("level")
                        .HasColumnType("int");

                    b.Property<string>("modified_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("modified_date")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("subject_id")
                        .HasColumnType("char(36)");

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.Property<Guid>("user_id")
                        .HasColumnType("char(36)");

                    b.HasKey("question_id");

                    b.ToTable("question");
                });

            modelBuilder.Entity("Bg.EduSocial.Domain.QuestionTestEntity", b =>
                {
                    b.Property<Guid>("question_test_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("modified_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("modified_date")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("point")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("question_id")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("test_id")
                        .HasColumnType("char(36)");

                    b.HasKey("question_test_id");

                    b.ToTable("question_test");
                });

            modelBuilder.Entity("Bg.EduSocial.Domain.ResultQuestionEntity", b =>
                {
                    b.Property<Guid>("result_question_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("modified_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("modified_date")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("question_id")
                        .HasColumnType("char(36)");

                    b.HasKey("result_question_id");

                    b.ToTable("result_question");
                });

            modelBuilder.Entity("Bg.EduSocial.Domain.SubjectEntity", b =>
                {
                    b.Property<Guid>("subject_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("modified_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("modified_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("subject_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("subject_id");

                    b.ToTable("subject");

                    b.HasData(
                        new
                        {
                            subjectid = new Guid("bca0a3a0-4b29-4a94-9b14-5d40b2a0c7c2"),
                            createdby = "",
                            createddate = new DateTime(2025, 1, 18, 12, 56, 44, 685, DateTimeKind.Local).AddTicks(2750),
                            modifiedby = "",
                            modifieddate = new DateTime(2025, 1, 18, 12, 56, 44, 685, DateTimeKind.Local).AddTicks(2752),
                            subjectname = "Toán"
                        });
                });

            modelBuilder.Entity("Bg.EduSocial.Domain.TestClassroomEntity", b =>
                {
                    b.Property<Guid>("test_classroom_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("classroom_id")
                        .HasColumnType("char(36)");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("modified_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("modified_date")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("test_id")
                        .HasColumnType("char(36)");

                    b.HasKey("test_classroom_id");

                    b.ToTable("test_classroom");
                });

            modelBuilder.Entity("Bg.EduSocial.Domain.TestEntity", b =>
                {
                    b.Property<Guid>("test_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("duration")
                        .HasColumnType("double");

                    b.Property<DateTime?>("finish_time")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("modified_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("modified_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("start_time")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("user_id")
                        .HasColumnType("char(36)");

                    b.HasKey("test_id");

                    b.ToTable("test");
                });

            modelBuilder.Entity("Bg.EduSocial.Domain.UserEntity", b =>
                {
                    b.Property<Guid>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("created_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("modified_by")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("modified_date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("role_id")
                        .HasColumnType("int");

                    b.Property<string>("user_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("user_id");

                    b.ToTable("user");

                    b.HasData(
                        new
                        {
                            userid = new Guid("ee3feb55-5904-4fc2-bbc6-7c867eca34d3"),
                            createdby = "",
                            createddate = new DateTime(2025, 1, 18, 12, 56, 44, 685, DateTimeKind.Local).AddTicks(2300),
                            modifiedby = "",
                            modifieddate = new DateTime(2025, 1, 18, 12, 56, 44, 685, DateTimeKind.Local).AddTicks(2317),
                            name = "Admin",
                            password = "$2a$11$0WYlkW6cptRox/EhTPwaQ.SpSM5wWEErz4ZqcxdyJGHoIYDfbSgNO",
                            roleid = 1,
                            username = "admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
